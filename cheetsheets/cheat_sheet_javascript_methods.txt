Встроенные методы

TODO

Date
JSON
RegExp

**************************** Array.prototype *****************************

Метод concat() возвращает новый массив, состоящий из массива, на котором он был вызван, соединённого с другими массивами и/или значениями, переданными в качестве аргументов.
    [].concat(value1[, value2[, ...[, valueN]]]);

Метод forEach() выполняет указанную функцию один раз для каждого элемента в массиве.
    [].forEach(function(currentValue, index, array) { /* Your code here */ });

Метод includes() определяет, содержит ли массив определённый элемент, возвращая в зависимости от этого true или false.
    [].includes(searchElement[, fromIndex]);

Метод indexOf() возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.
    [].indexOf(searchElement[, fromIndex = 0]);

Метод join() объединяет все элементы массива в строку.
    [].join(x);

Метод lastIndexOf() возвращает последний индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.
    [].lastIndexOf(searchElement[, fromIndex = arr.length-1]);

Метод pop() удаляет последний элемент из массива и возвращает его значение.
    [].pop();

Метод push() добавляет один или более элементов в конец массива и возвращает новую длину массива.
    [].push();

Метод reverse() на месте обращает порядок следования элементов массива. Первый элемент массива становится последним, а последний — первым.
    [].reverse();

Метод shift() удаляет первый элемент из массива и возвращает его значение.
    [].shift();

Метод slice() возвращает новый массив, содержащий копию части исходного массива.
    [].slice([begin[, end]);

Метод splice() изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые.
    [].splice(start[, deleteCount[, item1]]);

Метод unshift() добавляет один или более элементов в начало массива и возвращает новую длину массива.
    [].unshift();

Свойство length возвращает число элементов в этом массиве.
    [].length

Хочешь больше? Смотри Array.prototype https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype  // На сайте есть русская версия



**************************** Math ****************************************

Метод Math.abs(x) возвращает абсолютное значение числа.
Метод Math.ceil(x) возвращает наибольшее целое число, большее, либо равное указанному числу.
Метод Math.floor(x) возвращает наибольшее целое число, меньшее, либо равное указанному числу.
Метод Math.max(x, x, x, x,...) возвращает наибольшее из нуля или более чисел.
Метод Math.min(x, x, x, x,...) возвращает наименьшее из нуля или более чисел.
Метод Math.pow(x, x) возводит число в степень.
Метод Math.random() возвращает псевдослучайное число с плавающей запятой из диапазона от 0 до 1.
Метод Math.round(x) возвращает число, округлённое к ближайшему целому.
Метод Math.sqrt(x) возвращает квадратный корень числа.
Метод Math.trunc(x) возвращает целую часть числа путём удаления всех дробных знаков.

Хочешь больше? Смотри Math https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math    // На сайте есть русская версия



**************************** String.prototype ****************************

Метод charAt() возвращает указанный символ из строки.
    ''.charAt(index);
Метод concat() объединяет текст из двух или более строк и возвращает новую строку.
    ''.concat(string2, string3[, ..., stringN]);
Метод includes() определяет, находится ли одна строка внутри другой, возвращая, соотвественно, true или false.
    ''.includes(searchString[, position]);
Метод indexOf() возвращает индекс первого вхождения указанного значения в строковый объект String, на котором он был вызван, начиная с индекса fromIndex. Возвращает -1, если значение не найдено.
    ''.indexOf(searchValue[, fromIndex]);
Метод lastIndexOf() возвращает индекс последнего вхождения указанного значения в строковый объект String, на котором он был вызван, или -1, если ничего не было найдено. Поиск по строке ведётся от конца к началу, начиная с индекса fromIndex.
    ''.lastIndexOf(searchValue[, fromIndex]);
Метод repeat() конструирует и возвращает новую строку, содержащую указанное количество соединённых вместе копий строки, на которой он был вызван.
    ''.repeat(count);
Метод replace() возвращает новую строку с некоторыми или всеми сопоставлениями с шаблоном, заменёнными на заменитель.
    ''.replace(substr, newSubStr[, flags]);
Метод slice() извлекает часть строки и возвращает новую строку.
    ''.slice(beginSlice[, endSlice]);
Метод split() разбивает объект String на массив строк путём разделения строки указанной подстрокой.
    ''.split([separator[, limit]]);
Метод substr() возвращает указанное количество символов из строки, начиная с указанной позиции.
    ''.substr(start[, length]);
Метод substring() возвращает подстроку строки между двумя индексами, или от одного индекса и до конца строки.
    ''.substring(indexA[, indexB]);
Метод toLowerCase() возвращает значение строки, на которой он был вызван, преобразованное в нижний регистр.
    ''.toLowerCase();
Метод toUpperCase() возвращает значение строки, на которой он был вызван, преобразованное в верхний регистр.
    ''.toUpperCase();
Метод trim() удаляет пробельные символы с начала и конца строки.
    ''.trim();

Хочешь больше? Смотри String.prototype https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype    // На сайте есть русская версия
