<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>React UI</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <script src="js/jquery.js"></script>
</head>

<body>
    <style>
        body {
            width: 1000px;
            padding-bottom: 200px;
        }

        .z {
            color: red;
            margin: 1em 0;
        }
    </style>

    <style>
        .nuts {
            font-size: 25px;
            overflow: hidden;
        }

        .nuts li {
            float: left;
            clear: left;
            padding: 5px;
        }

        .nuts li:nth-child(odd) {
            background: #d1d1d1;
        }

        .nuts li:nth-child(even) {
            background: #a3a3a3;
        }

        .lists {
            display: flex;
        }
    </style>

    <ul class="nuts">
        <li>Арахис</li>
        <li>Кешью</li>
        <li>Фундук</li>
        <li>Миндаль</li>
    </ul>

    <script>
        var nuts = ['Арахис', 'Кешью', 'Фундук', 'Миндаль'];
    </script>

    <p class="z">
        Создать список тремя способами с использованием React.createElement (данные внутри, НЕ используй переменную nuts):
    </p>

    <ul class="z">
        <li>Без компонентов</li>
        <li>Функциональный компонент</li>
        <li>Классовый компонент</li>
    </ul>

    <div class="lists">
        <div id="list-1"></div>
        <div id="list-2"></div>
        <div id="list-3"></div>
    </div>

    <p>
        <button class="add-list-1">Без компонентов</button>
        <button class="add-list-2">Функциональный компонент</button>
        <button class="add-list-3">Классовый компонент</button>
    </p>

    <script type="text/babel">
        $('.add-list-1').on('click', function() {
            var list = React.createElement('ul', {
                className: 'nuts'
            }, [
                React.createElement('li', null, 'Арахис'),
                React.createElement('li', null, 'Кешью'),
                React.createElement('li', null, 'Фундук'),
                React.createElement('li', null, 'Миндаль')
            ]);

            ReactDOM.render(list, document.querySelector('#list-1'));

        });

        $('.add-list-2').on('click', function() {
            var Ul = function(props) {
                return (
                    React.createElement('ul', {
                            className: 'nuts'
                        }, props.items.map((item, idx) => React.createElement('li', null, item))
                    )
                );
            };

            var ul = React.createElement(Ul, {
                items: ['Арахис', 'Кешью', 'Фундук', 'Миндаль']
            });

            ReactDOM.render(ul, document.querySelector('#list-2'));

        });

        $('.add-list-3').on('click', function() {
            class Ul extends React.Component {
                render() {
                    return (
                        React.createElement('ul', {
                                className: 'nuts'
                            }, this.props.items.map((item, idx) => React.createElement('li', {key: idx}, item))
                        )
                    );
                }
            }

            var ul = React.createElement(Ul, {
                items: ['Арахис', 'Кешью', 'Фундук', 'Миндаль']
            });

            ReactDOM.render(ul, document.querySelector('#list-3'));

        });
    </script>

    <p class="z">
        Создать список тремя способами с использованием React.createElement (данные снаружи, используй переменную nuts):
    </p>

    <ul class="z">
        <li>Без компонентов</li>
        <li>Функциональный компонент</li>
        <li>Классовый компонент</li>
    </ul>

    <div class="lists">
        <div id="list-4"></div>
        <div id="list-5"></div>
        <div id="list-6"></div>
    </div>

    <p>
        <button class="add-list-4">Без компонентов</button>
        <button class="add-list-5">Функциональный компонент</button>
        <button class="add-list-6">Классовый компонент</button>
    </p>

    <script type="text/babel">
        $('.add-list-4').on('click', function() {
            var list = React.createElement('ul', {
                    className: 'nuts'
                },
                nuts.map(nut => React.createElement('li', null, nut))
            );

            ReactDOM.render(list, document.querySelector('#list-4'));

        });

        $('.add-list-5').on('click', function() {
            var Ul = function(props) {
                return (
                    React.createElement('ul', {
                            className: 'nuts'
                        }, props.items.map((item, idx) => React.createElement('li', null, item))
                    )
                );
            };

            var ul = React.createElement(Ul, {
                items: nuts
            });

            ReactDOM.render(ul, document.querySelector('#list-5'));

        });

        $('.add-list-6').on('click', function() {
            class Ul extends React.Component {
                render() {
                    return (
                        React.createElement('ul', {
                                className: 'nuts'
                            }, this.props.items.map((item, idx) => React.createElement('li', {key: idx}, item))
                        )
                    );
                }
            }

            var ul = React.createElement(Ul, {
                items: nuts
            });

            ReactDOM.render(ul, document.querySelector('#list-6'));

        });
    </script>

    <p class="z">
        Создать список тремя способами с использованием JSX (данные внутри, НЕ используй переменную nuts):
    </p>

    <ul class="z">
        <li>Без компонентов</li>
        <li>Функциональный компонент</li>
        <li>Классовый компонент</li>
    </ul>

    <div class="lists">
        <div id="list-7"></div>
        <div id="list-8"></div>
        <div id="list-9"></div>
    </div>

    <p>
        <button class="add-list-7">Без компонентов</button>
        <button class="add-list-8">Функциональный компонент</button>
        <button class="add-list-9">Классовый компонент</button>
    </p>

    <script type="text/babel">
        // Write your code here
        $('.add-list-7').on('click', function() {
            var list = <ul className="nuts">
                <li>Арахис</li>
                <li>Кешью</li>
                <li>Фундук</li>
                <li>Миндаль</li>
            </ul>;

            ReactDOM.render(list, document.querySelector('#list-7'));

        });

        $('.add-list-8').on('click', function() {
            var Ul = function(props) {
                return (
                    <ul className="nuts">
                        {
                            props.items.map((item, idx) => <li key={idx}>{item}</li>)
                        }
                    </ul>
                );
            };

            var ul = <Ul items={['Арахис', 'Кешью', 'Фундук', 'Миндаль']} />;

            ReactDOM.render(ul, document.querySelector('#list-8'));
        });

        $('.add-list-9').on('click', function() {
            class Ul extends React.Component {
                render() {
                    return (
                        <ul className="nuts">
                            {
                                this.props.items.map((item, idx) => <li key={idx}>{item}</li>)
                            }
                        </ul>
                    );
                }
            }

            var ul = <Ul items={['Арахис', 'Кешью', 'Фундук', 'Миндаль']} />;

            ReactDOM.render(ul, document.querySelector('#list-9'));

        });
    </script>

    <p class="z">
        Создать список тремя способами с использованием JSX (данные снаружи, используй переменную nuts):
    </p>

    <ul class="z">
        <li>Без компонентов</li>
        <li>Функциональный компонент</li>
        <li>Классовый компонент</li>
    </ul>

    <div class="lists">
        <div id="list-10"></div>
        <div id="list-11"></div>
        <div id="list-12"></div>
    </div>

    <p>
        <button class="add-list-10">Без компонентов</button>
        <button class="add-list-11">Функциональный компонент</button>
        <button class="add-list-12">Классовый компонент</button>
    </p>

    <script type="text/babel">
        // Write your code here
        $('.add-list-10').on('click', function() {
            var list = <ul className="nuts">
                {
                    nuts.map((item,idx) => <li key={idx}>{item}</li>)
                }
            </ul>;

            ReactDOM.render(list, document.querySelector('#list-10'));

        });

        $('.add-list-11').on('click', function() {
            var Ul = function(props) {
                return (
                    <ul className="nuts">
                        {
                            props.items.map((item, idx) => <li key={idx}>{item}</li>)
                        }
                    </ul>
                );
            };

            var ul = <Ul items={nuts} />;

            ReactDOM.render(ul, document.querySelector('#list-11'));
        });

        $('.add-list-12').on('click', function() {
            class Ul extends React.Component {
                render() {
                    return (
                        <ul className="nuts">
                            {
                                this.props.items.map((item, idx) => <li key={idx}>{item}</li>)
                            }
                        </ul>
                    );
                }
            }

            var ul = <Ul items={nuts} />;

            ReactDOM.render(ul, document.querySelector('#list-12'));

        });
    </script>

    <div class="games"><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span></div><img src="images/games/Batman-v-Superman-Dawn-of-Justice-290x180.jpg"><h6>Batman v Superman Dawn of Justice</h6></div><div class="game"><div class="game-flags"></div><img src="images/games/Batman-Begins-290x180.jpg"><h6>Batman Begins</h6></div><div class="game"><div class="game-flags"><span class="item item-new">New</span></div><img src="images/games/jackpot-giant-290x180.jpg"><h6>Jackpot Giant</h6></div><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span><span class="item item-new">New</span></div><img src="images/games/european-roulette-290x180.jpg"><h6>Premium European Roulette</h6></div><div class="game"><div class="game-flags"></div><img src="images/games/Da-vinci-Vault-290x180.jpg"><h6>Da Vinci’s Vault</h6></div><div class="game"><div class="game-flags"></div><img src="images/games/Murder-Mystery-290x180.jpg"><h6>Murder Mystery</h6></div><div class="game"><div class="game-flags"><span class="item item-new">New</span></div><img src="images/games/PremiumBlackjack-290x180.jpg"><h6>Premium Blackjack</h6></div><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span></div><img src="images/games/Gladiator-road-to-rome-290x180.jpg"><h6>Gladiator 2</h6></div></div>

    <p class="z">Используй JSX и функциональные компоненты. Создай 2 компонента: Games и Game (компонент одной игры). Используй переменную games в качестве свойств для компонента Games. При клике на кнопку, отобрази компонент Games в контейнере #games.</p>

    <div class="games" id="games"></div>

    <p>
        <button class="add-games">Добавить игры</button>
    </p>

    <script>
        var games = [
            {
                name: 'Batman v Superman Dawn of Justice',
                imageURL: 'images/games/Batman-v-Superman-Dawn-of-Justice-290x180.jpg',
                flagHot: true
            },
            {
                name: 'Batman Begins',
                imageURL: 'images/games/Batman-Begins-290x180.jpg'
            },
            {
                name: 'Jackpot Giant',
                imageURL: 'images/games/jackpot-giant-290x180.jpg',
                flagNew: true
            },
            {
                name: 'Premium European Roulette',
                imageURL: 'images/games/european-roulette-290x180.jpg',
                flagHot: true,
                flagNew: true
            },
            {
                name: 'Da Vinci’s Vault',
                imageURL: 'images/games/Da-vinci-Vault-290x180.jpg'
            },
            {
                name: 'Murder Mystery',
                imageURL: 'images/games/Murder-Mystery-290x180.jpg'
            },
            {
                name: 'Premium Blackjack',
                imageURL: 'images/games/PremiumBlackjack-290x180.jpg',
                flagNew: true
            },
            {
                name: 'Gladiator 2',
                imageURL: 'images/games/Gladiator-road-to-rome-290x180.jpg',
                flagHot: true
            }
        ];
    </script>

    </script><script type="text/babel">
        // Write your code here
        $('.add-games').on('click', function() {
            console.log(6);
            var Game = function(props) {
                return (
                    <div className='game'>
                        <div className="game-flags">
                            {props.flagHot ? <span className="item item-hot">Hot</span> : null}
                            {props.flagNew ? <span className="item item-new">New</span> : null}
                        </div>
                        <img src={props.imageURL} />
                        <h6>{props.name}</h6>
                    </div>
                );
            };

            var Games = function({games}) {
                return games.map((game, idx) => <Game key={idx} {...game} />);
            };
            ReactDOM.render(<Games games={games} />, document.querySelector('#games'));
        });
    </script>

    <style>
        .games {
            background: #212324;
            padding: 0.5%;
            border-radius: 3px;
            margin-bottom: 0.5%;
        }

        .games:empty {
            display: none;
        }

        .games::after {
            content: '';
            clear: both;
            display: block;
        }

        .game {
            background: #353638;
            padding: 12px;
            border-radius: 3px;
            border: 1px solid transparent;
            float: left;
            width: 24%;
            box-sizing: border-box;
            margin: 0.5%;
            cursor: pointer;
            position: relative;
        }

        .game-flags {
            position: absolute;
            top: 18px;
            left: 18px;
        }

        .game-flags .item {
            background: magenta;
            color: #fff;
            margin-right: 2px;
            padding: 4px;
            border-radius: 2px;
            font-size: 9px;
            text-transform: uppercase;
            font-family: sans-serif;
        }

        .game-flags .item-new {
            background: #14b1a4;
        }

        .game-flags .item-hot {
            background: #d5341a;
        }

        .game:hover {
            border: 1px solid white;
        }

        .game img {
            display: block;
            border-radius: 3px;
            box-shadow: 0 0 2px #a4a4a4;
            width: 100%;
            margin-bottom: 12px;
        }

        .game h6 {
            color: #b1b1b1;
            font-family: Helvetica, sans-serif;
            font-size: 15px;
            font-weight: normal;
            margin: 0;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

        .game:hover h6 {
            color: #ffcb05;
        }
    </style>

    <div class="whores"><div class="whore"><div class="whore-name">Сильвия</div><img src="images/whores/silvia.jpg" width="200"><div class="whore-age">Возраст: 18</div><div class="whore-boobs">Размер груди: 4</div><div class="whore-height">Рост: 168</div><div class="whore-weight">Вес: 50</div><div class="whore-phone">+380960000001</div><div class="whore-can-come">Выезд: +</div><div class="whore-teaser">Очень нежная девчонка доставит Вам удовольствие по полной программе! Каждый мужчина ищет идеальную женщину - попробуй, может быть я именно та которая тебе нужна... Фото мои 1000%!!! Выезда НЕТ!!! Квартира для встреч ЕСТЬ, 5 мин от ст. метро "Дворец Украина"</div></div><div class="whore"><div class="whore-name">Белла</div><img src="images/whores/bella.jpg" width="200"><div class="whore-age">Возраст: 21</div><div class="whore-boobs">Размер груди: 3</div><div class="whore-height">Рост: 172</div><div class="whore-weight">Вес: 65</div><div class="whore-phone">+380960000002</div><div class="whore-can-come">Выезд: -</div><div class="whore-teaser">Я - барышня абсолютно особенная! Я яркая и стильная, веселая и заводная, сексуальная и конечно же очень красивая! Для тех, кто способен оценить по достоинству настоящую женщину, для тех, кто любит в постели задор и изобретательность, для тех прекрасных и щедрых мужчин, которые хотят провести незабываемый досуг в объятиях умелой красотки! Я вся для вас, дорогие мои. Да, да! Именно для тебя, милый! ФОТО МОИ!!!</div></div><div class="whore"><div class="whore-name">Марта</div><img src="images/whores/marta.jpg" width="200"><div class="whore-age">Возраст: 23</div><div class="whore-boobs">Размер груди: 2</div><div class="whore-height">Рост: 163</div><div class="whore-weight">Вес: 54</div><div class="whore-phone">+380960000003</div><div class="whore-can-come">Выезд: -</div><div class="whore-teaser">Я - симпатичная девочка экзотической внешности без комплексов и с огромной любовью к сексу! Я непревзойденная любовница, страстная, доступная и яркая! Я невероятно сексуальна и изобретательна, мила и непосредственна. Не теряй времени, звони мне, мой друг! Я скрашу твоё одиночество :)</div></div><div class="whore"><div class="whore-name">Жасмин</div><img src="images/whores/zhasmin.jpg" width="200"><div class="whore-age">Возраст: 32</div><div class="whore-boobs">Размер груди: 1</div><div class="whore-height">Рост: 151</div><div class="whore-weight">Вес: 45</div><div class="whore-phone">+380960000004</div><div class="whore-can-come">Выезд: +</div><div class="whore-teaser">Еще не распустившаяся розочка ждет своего воздыхателя! Чарующий аромат, тонкий силуэт. Раскрой мой бутончик и покажи свою силу! Я храню свою свежесть, чтоб ты мог вкусить первым тот первозданный нектар, что приготовлен для тебя! Мои упругие девичьи грудки покрываются росой вожделения, когда я думаю о сексе с тобой, мое лоно наполняется жаркой страстью и желаниями.</div></div></div>

    <p class="z">Используй JSX и функциональные компоненты. Создай 2 компонента: Whores и Whore (компонент одной девочки). Используй переменную whores в качестве свойств для компонента Whores. При клике на кнопку, отобрази компонент Whores в контейнере #whores.</p>

    <div class="whores" id="whores"></div>

    <p>
        <button class="add-whores">Добавить девочек</button>
    </p>

    <script>
        var whores = [
            {
                name: 'Сильвия',
                photo: 'images/whores/silvia.jpg',
                age: '18',
                boobs: '4',
                weight: '50',
                height: '168',
                phone: '+380960000001',
                can_come: true,
                teaser: 'Очень нежная девчонка доставит Вам удовольствие по полной программе! Каждый мужчина ищет идеальную женщину - попробуй, может быть я именно та которая тебе нужна... Фото мои 1000%!!! Выезда НЕТ!!! Квартира для встреч ЕСТЬ, 5 мин от ст. метро \"Дворец Украина\"'
            },
            {
                name: 'Белла',
                photo: 'images/whores/bella.jpg',
                age: '21',
                boobs: '3',
                weight: '65',
                height: '172',
                phone: '+380960000002',
                can_come: false,
                teaser: 'Я - барышня абсолютно особенная! Я яркая и стильная, веселая и заводная, сексуальная и конечно же очень красивая! Для тех, кто способен оценить по достоинству настоящую женщину, для тех, кто любит в постели задор и изобретательность, для тех прекрасных и щедрых мужчин, которые хотят провести незабываемый досуг в объятиях умелой красотки! Я вся для вас, дорогие мои. Да, да! Именно для тебя, милый! ФОТО МОИ!!!'
            },
            {
                name: 'Марта',
                photo: 'images/whores/marta.jpg',
                age: '23',
                boobs: '2',
                weight: '54',
                height: '163',
                phone: '+380960000003',
                can_come: false,
                teaser: 'Я - симпатичная девочка экзотической внешности без комплексов и с огромной любовью к сексу! Я непревзойденная любовница, страстная, доступная и яркая! Я невероятно сексуальна и изобретательна, мила и непосредственна. Не теряй времени, звони мне, мой друг! Я скрашу твоё одиночество :)'
            },
            {
                name: 'Жасмин',
                photo: 'images/whores/zhasmin.jpg',
                age: '32',
                boobs: '1',
                weight: '45',
                height: '151',
                phone: '+380960000004',
                can_come: true,
                teaser: 'Еще не распустившаяся розочка ждет своего воздыхателя! Чарующий аромат, тонкий силуэт. Раскрой мой бутончик и покажи свою силу! Я храню свою свежесть, чтоб ты мог вкусить первым тот первозданный нектар, что приготовлен для тебя! Мои упругие девичьи грудки покрываются росой вожделения, когда я думаю о сексе с тобой, мое лоно наполняется жаркой страстью и желаниями.'
            }
        ];
    </script>

    <script type="text/babel">
        // Write your code here
        $('.add-whores').on('click', function() {
        var Whore = function(props) {
            return (
                <div className="whore">
                    <div className="whore-name">{props.name}</div>
                    <img src={props.photo}/>
                        <div className="whore-age">Возраст: {props.age}</div>
                        <div className="whore-boobs">Размер груди: {props.boobs}</div>
                        <div className="whore-height">Рост: {props.height}</div>
                        <div className="whore-weight">Вес: {props.weight}</div>
                        <div className="whore-phone">{props.phone}</div>
                        <div className="whore-can-come">Выезд: {props.can_come ? '+' : '-'}</div>
                        <div className="whore-teaser">{props.teaser}</div>
                </div>
            );
        };

        var Whores = function({whores}) {
            return whores.map((whore, idx) => <Whore key={idx} {...whore} />);
        };
        ReactDOM.render(<Whores whores={whores} />, document.querySelector('#whores'));
        });
    </script>

    <style>
        .whores {
            background: #751a1a;
            width: 910px;
            height:  474px;
            padding: 10px;
            overflow: hidden;
            margin-bottom: 1em;
        }

        .whores:empty {
            display: none;
        }

        .whore {
            background: white;
            padding: 10px;
            width: 200px;
            position: relative;
            font-family: Arial, sans-serif;
            font-size: 15px;
            cursor: pointer;
            float: left;
            margin: 0 0 10px 10px;
        }

        .whore:first-child {
            margin-left: 0;
        }

        .whore-name {
            font-size: 22px;
            font-family: Tahoma, sans-serif;
            margin-bottom: 5px;
            color: #7b1e1e;
        }

        .whore img {
            margin-bottom: 10px;
        }

        .whore-teaser {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            box-sizing: border-box;
            padding: 10px;
            display: none;
        }

        .whore:hover .whore-teaser {
            display: block;
        }

        .whore-phone {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0 1px;
        }
    </style>

    <div class="movies">
        <div class="movie">
            <div class="movie-image-container"><a href="#"><img src="images/movies/1580980803_e29f9c3.jpg"></a></div>
            <a class="movie-title" href="#">Джентльмены</a>
            <div class="movie-details"><span>2020</span></div>
        </div>
        <div class="movie">
            <div class="movie-image-container"><a href="#"><img src="images/movies/1437566539_88761604.jpg"></a></div>
            <a class="movie-title" href="#">Джентльмены удачи</a>
            <div class="movie-details"><span>1971</span></div>
        </div>
        <div class="movie">
            <div class="movie-image-container"><a href="#"><img src="images/movies/1533155746_20b5bd3.jpg"></a></div>
            <a class="movie-title" href="#">Мстители: Война бесконечности</a>
            <div class="movie-details"><span>2018</span></div>
        </div>
        <div class="movie">
            <div class="movie-image-container"><a href="#"><img src="images/movies/1538682174_690d454.jpg"></a></div>
            <a class="movie-title" href="#">Веном</a>
            <div class="movie-details"><span>2018</span></div>
        </div>
        <div class="movie">
            <div class="movie-image-container"><a href="#"><img src="images/movies/1530651906_9226a04.jpg"></a></div>
            <a class="movie-title" href="#">Первому игроку приготовиться</a>
            <div class="movie-details"><span>2018</span></div>
        </div>
    </div>

    <p class="z">Используй JSX и функциональные компоненты. Создай 2 компонента: Movies и Movie (компонент одного фильма). Используй переменную movies в качестве свойств для компонента Movies. При клике на кнопку, отобрази компонент Movies в контейнере #movies.</p>

    <div class="movies" id="movies"></div>

    <p>
        <button class="add-movies">Добавить фильмы</button>
    </p>

    <script>
        var movies = [
            {
                title: 'Джентльмены',
                id: '1580980803_e29f9c3',
                year: 2020,
                countries: ['США'],
                genres: ['боевик, комедия, криминал'],
                time: 113,
                rating: 8.5,
                plot: 'Талантливый выпускник Оксфорда, применив свой уникальный ум и невиданную дерзость, придумал нелегальную схему обогащения с использованием поместья обедневшей английской аристократии. Однако когда он решает продать свой бизнес влиятельному клану миллиардеров из США, на его пути встают не менее обаятельные, но жесткие джентльмены. Намечается обмен любезностями, который точно не обойдется без перестрелок и парочки несчастных случаев.'
            },
            {
                title: 'Джентльмены удачи',
                id: '1437566539_88761604',
                year: 1971,
                countries: ['СССР'],
                genres: ['драма, комедия, криминал, детектив'],
                time: 84,
                rating: 8.4,
                plot: 'Заведующему детсадом Трошкину фатально не повезло: он оказался как две капли воды похож на бандита по кличке «Доцент», похитившего уникальный шлем Александра Македонского.\n\nМилиция внедряет добряка Трошкина в воровскую среду — и ему ничего не остается, кроме как старательно изображать своего двойника-злодея, путая всех окружающих. Со временем он настолько блестяще входит в роль, что сам начинает порой приходить в ужас. Между тем, жизни его угрожает смертельная опасность...'
            },
            {
                title: 'Мстители: Война бесконечности',
                id: '1533155746_20b5bd3',
                year: 2018,
                countries: ['США'],
                genres: ['фантастика, фэнтези, боевик, приключения'],
                time: 149,
                rating: 7.8,
                plot: 'Пока Мстители и их союзники продолжают защищать мир от различных опасностей, с которыми не смог бы справиться один супергерой, новая угроза возникает из космоса: Танос. Межгалактический тиран преследует цель собрать все шесть Камней Бесконечности — артефакты невероятной силы, с помощью которых можно менять реальность по своему желанию. Всё, с чем Мстители сталкивались ранее, вело к этому моменту — судьба Земли никогда ещё не была столь неопределённой.'
            },
            {
                title: 'Веном',
                id: '1538682174_690d454',
                year: 2018,
                countries: ['США'],
                genres: ['ужасы, фантастика, боевик, триллер'],
                time: 112,
                rating: 6.8,
                plot: 'Что если в один прекрасный день в тебя вселяется существо-симбиот, которое наделяет тебя сверхчеловеческими способностями? Вот только Веном — симбиот совсем недобрый, и договориться с ним невозможно. Хотя нужно ли договариваться?.. Ведь в какой-то момент ты понимаешь, что быть плохим вовсе не так уж и плохо. Так даже веселее. В мире и так слишком много супергероев! Мы — Веном!'
            },
            {
                title: 'Первому игроку приготовиться',
                id: '1530651906_9226a04',
                year: 2018,
                countries: ['США'],
                genres: ['фантастика, боевик, приключения'],
                time: 140,
                rating: 7.3,
                plot: 'Действие фильма происходит в 2045 году, мир погружается в хаос и находится на грани коллапса. Люди ищут спасения в игре OASIS — огромной вселенной виртуальной реальности. Ее создатель, гениальный и эксцентричный Джеймс Холлидэй, оставляет уникальное завещание. Все его колоссальное состояние получит игрок, первым обнаруживший цифровое «пасхальное яйцо», которое миллиардер спрятал где-то на просторах OASISа. Запущенный им квест охватывает весь мир. Совершенно негероический парень по имени Уэйд Уоттс решает принять участие в состязании, с головой бросаясь в головокружительную, искажающую реальность погоню за сокровищами по фантастической вселенной, полной загадок, открытий и опасностей.'
            },
            {
                title: 'Фантастические твари и где они обитают',
                id: '1479633673_69883a3',
                year: 2016,
                countries: ['Великобритания, США'],
                genres: ['фэнтези, приключения, семейный'],
                time: 133,
                rating: 7.5,
                plot: 'Поиск и изучение необычайных волшебных существ приводят магозоолога Ньюта Саламандера в Нью-Йорк. Скорее всего, он отбыл бы на поезде дальше, если бы не не маг (так в Америке называют магглов) по имени Якоб, оставленный в неположенном месте магический чемодан и побег из него фантастических животных Ньюта.'
            },
            {
                title: 'Яркость',
                id: '1514032370_5fe3334',
                year: 2017,
                countries: ['США'],
                genres: ['фантастика, фэнтези, боевик, триллер, криминал'],
                time: 117,
                rating: 6.4,
                plot: 'Действие разворачивается в Лос-Анджелесе, в вымышленном фантастическом мире, где царствуют не только высокие технологии, но и магия. В городе бок о бок с людьми живут эльфы, орки и другие сверхъестественные существа. Главный герой служит в полицейском департаменте, в специальном отделе, занимающимся раскрытием преступлений, в которых замешаны магические силы. Пытаясь раскрыть очередное дело, он вынужден объединиться с орком. Вместе им предстоит найти и защитить древний мистический артефакт, обладающий могущественными способностями, от рук злоумышленников.'
            },
            {
                title: 'Джуманджи: Зов джунглей',
                id: '1520282582_c9dc4bf',
                year: 2017,
                countries: ['США'],
                genres: ['фэнтези, боевик, комедия, приключения'],
                time: 119,
                rating: 7.0,
                plot: 'Четверо подростков оказываются внутри игры «Джуманджи». Их ждет схватка с носорогами, черными мамбами, а на каждом шагу будет подстерегать бесконечная череда ловушек и головоломок. Чтобы пройти игру и остаться в живых, им придется перевоплотиться в персонажей игры: робкий и застенчивый Спенсер превращается в отважного и сильного исследователя, здоровяк Фридж — в коротышку, модница и красавица Беттани — в профессора, а неуклюжая и нескладная Марта становится бесстрашной и ловкой амазонкой. Друзьям придется привыкнуть к совершенно новым и таким непривычным для себя ролям и найти дорогу домой.'
            },
            {
                title: 'Дэдпул 2',
                id: '1532601059_8414b29',
                year: 2018,
                countries: ['США'],
                genres: ['фантастика, боевик, комедия, приключения'],
                time: 119,
                rating: 7.5,
                plot: 'Единственный и неповторимый болтливый наемник — вернулся! Ещё более масштабный, ещё более разрушительный и даже ещё более голозадый, чем прежде! Когда в его жизнь врывается суперсолдат с убийственной миссией, Дэдпул вынужден задуматься о дружбе, семье и о том, что на самом деле значит быть героем, попутно надирая 50 оттенков задниц. Потому что иногда чтобы делать хорошие вещи, нужно использовать грязные приёмчики.'
            },
            {
                title: 'Пираты Карибского моря: Мертвецы не рассказывают сказки',
                id: '1504650777_piraty-karibskogo-morya-mertvecy-ne-rasskazyvayut-skazki',
                year: 2017,
                countries: ['США'],
                genres: ['фэнтези, боевик, комедия, приключения'],
                time: 129,
                rating: 6.6,
                plot: 'Исчерпавший свою удачу капитан Джек Воробей обнаруживает, что за ним охотится его старый неприятель, ужасный капитан Салазар и его призрачные пираты. Они только что сбежали из Дьявольского треугольника и намерены уничтожить всех пиратов, включая Джека. Поможет спастись лишь могущественный артефакт — трезубец Посейдона, который дарует своему обладателю полный контроль над морями.'
            },
            {
                title: 'Логан',
                id: '1502576549_ce30651',
                year: 2017,
                countries: ['США'],
                genres: ['фантастика, боевик, триллер, драма'],
                time: 141,
                rating: 7.4,
                plot: 'В недалеком будущем уставший от жизни Логан заботится о больном профессоре Икс, который прячется неподалеку от мексиканской границы. Но Логан больше не сможет скрывать свое прошлое, когда встретится с юным мутантом, которого преследуют темные силы.'
            },
            {
                title: 'Джон Уик 2',
                id: '1487431931_dzhon-uik-2',
                year: 2017,
                countries: ['США'],
                genres: ['боевик, триллер, криминал'],
                time: 122,
                rating: 7.1,
                plot: 'Когда бывший коллега Джона решает взять под свой контроль таинственную гильдию убийц, Уик вынужден выйти из отставки. Ведомый кровавой клятвой Джон отправляется в Рим, где ему придется сразиться с одними из самых опасных киллеров в мире.'
            },
            {
                title: 'Достать ножи',
                id: '1576196432_0fa6ac8',
                year: 2019,
                countries: ['США'],
                genres: ['детектив, комедия, драма, криминал'],
                time: 130,
                rating: 7.8,
                plot: 'Когда сразу после празднования 85-летия известного автора криминальных романов Харлана Тромби виновника торжества находят мёртвым, за расследование берётся обаятельный и дотошный детектив Бенуа Блан. Ему предстоит распутать тугую сеть уловок и корыстной лжи, которой его опутывают члены неблагополучной семьи Харлана и преданный ему персонал.'
            },
            {
                title: 'Убийство в Восточном экспрессе',
                id: '1510288752_01106ea',
                year: 2017,
                countries: ['США, Великобритания, Мальта, Франция, Канада, Новая Зеландия'],
                genres: ['драма, криминал, детектив'],
                time: 114,
                rating: 6.7,
                plot: 'Путешествие на одном из самых роскошных поездов Европы неожиданно превращается в одну из самых стильных и захватывающих загадок в истории. Фильм рассказывает историю тринадцати пассажиров поезда, каждый из которых находится под подозрением. И только сыщик должен как можно быстрее разгадать головоломку, прежде чем преступник нанесет новый удар.'
            },
            {
                title: 'Оно',
                id: '1507135882_c6d0632',
                year: 2017,
                countries: ['США, Канада'],
                genres: ['ужасы, триллер, драма'],
                time: 135,
                rating: 7.5,
                plot: 'Когда в городке Дерри, штат Мэн, начинают пропадать дети, несколько ребят сталкиваются со своими величайшими страхами и вынуждены помериться силами со злобным клоуном Пеннивайзом, чьи проявления жестокости и список жертв уходят в глубь веков.'
            },
            {
                title: 'Интерстеллар',
                id: '1422882994_3f5443f',
                year: 2014,
                countries: ['США, Великобритания, Канада'],
                genres: ['фантастика, драма, приключения'],
                time: 169,
                rating: 8.5,
                plot: 'Когда засуха приводит человечество к продовольственному кризису, коллектив исследователей и учёных отправляется сквозь червоточину (которая предположительно соединяет области пространства-времени через большое расстояние) в путешествие, чтобы превзойти прежние ограничения для космических путешествий человека и переселить человечество на другую планету.'
            },
            {
                title: 'Сделано в Америке',
                id: '1512594179_d5d2dc2',
                year: 2017,
                countries: ['США'],
                genres: ['боевик, триллер, драма, комедия, криминал, биография, история'],
                time: 115,
                rating: 7.1,
                plot: 'Он был самым юным пилотом Боинга 747 в США, а уже через несколько лет стал одним из богатейших людей в Америке. Его стиль жизни был столь же экстремальным, как и его бизнес. Закрытые приемы, роскошные блондинки, крутые тачки и рисковые сделки. Он обладал талантом делать деньги из воздуха.'
            },
            {
                title: 'Отряд самоубийц',
                id: '1479623658_f3b2fdc',
                year: 2016,
                countries: ['США'],
                genres: ['фантастика, фэнтези, боевик, приключения'],
                time: 118,
                rating: 6.4,
                plot: 'Правительство решает дать команде суперзлодеев шанс на искупление. Подвох в том, что их отправляют на миссию, где они, вероятнее всего, погибнут.'
            },
            {
                title: 'Марсианин',
                id: '1444073412_7b5f4286b7',
                year: 2015,
                countries: ['США'],
                genres: ['фантастика, приключения'],
                time: 141,
                rating: 8.2,
                plot: 'Марсианская миссия «Арес-3» в процессе работы была вынуждена экстренно покинуть планету из-за надвигающейся песчаной бури. Инженер и биолог Марк Уотни получил повреждение скафандра во время песчаной бури. Сотрудники миссии, посчитав его погибшим, эвакуировались с планеты, оставив Марка одного.\n' + '\n' + 'Очнувшись, Уотни обнаруживает, что связь с Землёй отсутствует, но при этом полностью функционирует жилой модуль. Главный герой начинает искать способ продержаться на имеющихся запасах еды, витаминов, воды и воздуха ещё 4 года до прилёта следующей миссии «Арес-4».'
            },
            {
                title: 'Заражение',
                id: '1584800229_d5161b2',
                year: 2011,
                countries: ['ОАЭ, США'],
                genres: ['фантастика, боевик, триллер, драма'],
                time: 106,
                rating: 6.4,
                plot: 'Международная организация врачей совместно с Центром по контролю и профилактике заболеваний США пытается помешать распространению смертельного вируса.'
            },
            {
                title: 'Паразиты',
                id: '1562661887_7028fa9',
                year: 2019,
                countries: ['Корея Южная'],
                genres: ['драма, комедия, триллер'],
                time: 131,
                rating: 8.0,
                plot: 'Генеральный директор международной IT-компании мистер Пак живёт со своей семьёй в роскошном особняке, полном дизайнерских вещей, произведений искусства и мрачных тайн. Скрытое становится явным, когда у старшей дочери мистера Пака появляется новый репетитор по английскому языку.'
            },
            {
                title: 'Счастливого дня смерти',
                id: '1509249509_af64a1d',
                year: 2017,
                countries: ['США'],
                genres: ['ужасы, триллер, детектив, комедия'],
                time: 96,
                rating: 6.4,
                plot: 'Каждый в универе мечтал попасть на её день рождения, но праздник был безнадежно испорчен незнакомцем в маске, убившим виновницу торжества. Однако судьба преподнесла имениннице леденящий душу подарок — бесконечный запас жизней. И теперь у девушки появился шанс вычислить своего убийцу, ведь этот день будет повторяться снова и снова...'
            },
            {
                title: 'Гарри Поттер и философский камень',
                id: '1374782528_2abd3db',
                year: 2001,
                countries: ['Великобритания, США'],
                genres: ['фэнтези, приключения, семейный'],
                time: 152,
                rating: 8.1,
                plot: 'Жизнь десятилетнего Гарри Поттера нельзя назвать сладкой: его родители умерли, едва ему исполнился год, а от дяди и тётки, взявших сироту на воспитание, достаются лишь тычки да подзатыльники. Но в одиннадцатый день рождения Гарри всё меняется. Странный гость, неожиданно появившийся на пороге, приносит письмо, из которого мальчик узнаёт, что на самом деле он чистокровный волшебник и принят в Хогвартс — школу магии. А уже через пару недель Гарри будет мчаться в поезде Хогвартс-экспресс навстречу новой жизни, где его ждут невероятные приключения, верные друзья и самое главное — ключ к разгадке тайны смерти его родителей.'
            },
            {
                title: 'Грань будущего',
                id: '1409591645_705a08d',
                year: 2014,
                countries: ['США, Австралия'],
                genres: ['фантастика, боевик'],
                time: 113,
                rating: 8.1,
                plot: 'В недалёком будущем раса инопланетян вторгается на Землю. Никакая армия в мире не может противостоять им. Майор Уильям Кейдж умирает в бою, но случается невозможное — он оказывается во временной петле. Раз за разом он попадает в один и тот же бой, сражается и умирает... снова и снова. И каждое повторяющееся сражение приближает его к разгадке того, как победить врага.'
            }
        ];
    </script>

    <script type="text/babel">
        // Write your code here
        $('.add-movies').on('click', function() {
            var Movie = function(props) {
                var imgSrc = 'images/movies/' + props.id + '.jpg';
                return (
                    <div className="movie">
                        <div className="movie-image-container">
                            <a href="#">
                               <img src={imgSrc} />
                            </a>
                        </div>
                        <a className="movie-title" href="#">{props.title}</a>
                        <div className="movie-details">
                            <span>{props.year}</span>
                        </div>
                    </div>
                );
            };

            var Movies = function({movies}) {
                return movies.map((movie, idx) => <Movie key={idx} {...movie} />);
            };
            ReactDOM.render(<Movies movies={movies} />, document.querySelector('#movies'));
        });
    </script>

    <style>
        .movies {
            overflow: hidden;
            padding: 7px 0;
        }

        .movies:empty {
            display: none;
        }

        .movie {
            float: left;
            margin: 0 7px;
            position: relative;
            width: 152px;
            height: 280px;
            font-family: 'Trebuchet MS', sans-serif;
        }

        .movie-image-container {
            overflow: hidden;
            margin-bottom: 3px;
            box-shadow: 0 1px 4px 0 #000;
            border-radius: 3px;
        }

        .movie img {
            display: block;
            width: 152px;
            height: 220px;
        }

        .movie-title {
            height: 15px;
            margin-bottom: 3px;
            overflow: hidden;
            display: block;
            color: black;
            text-decoration: none;
            font-size: 12px;
            font-weight: 600;
            line-height: 16px;
        }

        .movie-title:hover {
            text-decoration: underline;
        }

        .movie-details {
            height: 15px;
            margin-bottom: 3px;
            line-height: 14px;
            overflow: hidden;
        }

        .movie-details span {
            font-size: 11px;
            color: #848484;
        }
    </style>

    <div class="rich">
        <table>
            <tr>
                <th>№</th>
                <th>ФИО</th>
                <th>Состояние (в млрд $)</th>
                <th>Источник состояния</th>
                <th>Возраст</th>
                <th>Страна</th>
            </tr>
            <tr>
                <td>1</td>
                <td>Джефф Безос</td>
                <td>177</td>
                <td>Amazon.com</td>
                <td>57</td>
                <td>США</td>
            </tr>
            <tr>
                <td>2</td>
                <td>Илон Маск</td>
                <td>151</td>
                <td>Tesla</td>
                <td>49</td>
                <td>США</td>
            </tr>
            <tr>
                <td>3</td>
                <td>Бернар Арно и семья</td>
                <td>150</td>
                <td>LVMH</td>
                <td>72</td>
                <td>Франция</td>
            </tr>
            <tr>
                <td>4</td>
                <td>Билл Гейтс</td>
                <td>124</td>
                <td>Microsoft, инвестиции</td>
                <td>65</td>
                <td>США</td>
            </tr>
            <tr>
                <td>5</td>
                <td>Марк Цукерберг</td>
                <td>97</td>
                <td>Facebook</td>
                <td>36</td>
                <td>США</td>
            </tr>
            <tr>
                <td>6</td>
                <td>Уоррен Баффет</td>
                <td>96</td>
                <td>Berkshire Hathaway</td>
                <td>90</td>
                <td>США</td>
            </tr>
            <tr>
                <td>7</td>
                <td>Ларри Эллисон</td>
                <td>93</td>
                <td>Oracle</td>
                <td>76</td>
                <td>США</td>
            </tr>
            <tr>
                <td>8</td>
                <td>Ларри Пейдж</td>
                <td>91.5</td>
                <td>Google</td>
                <td>48</td>
                <td>США</td>
            </tr>
            <tr>
                <td>9</td>
                <td>Сергей Брин</td>
                <td>89</td>
                <td>Google</td>
                <td>47</td>
                <td>США</td>
            </tr>
            <tr>
                <td>10</td>
                <td>Мукеш Амбани</td>
                <td>84.5</td>
                <td>Reliance Industries</td>
                <td>63</td>
                <td>Индия</td>
            </tr>
            <tr>
                <td>11</td>
                <td>Амансио Ортега</td>
                <td>77</td>
                <td>Inditex</td>
                <td>85</td>
                <td>Испания</td>
            </tr>
            <tr>
                <td>12</td>
                <td>Франсуаза Беттанкур-Майерс и семья</td>
                <td>73.6</td>
                <td>L'Oreal</td>
                <td>67</td>
                <td>Франция</td>
            </tr>
            <tr>
                <td>13</td>
                <td>Чжун Шаньшань</td>
                <td>68.9</td>
                <td>Nongfu Spring, Wantai</td>
                <td>66</td>
                <td>Китай</td>
            </tr>
            <tr>
                <td>14</td>
                <td>Стив Балмер</td>
                <td>68.7</td>
                <td>Microsoft</td>
                <td>65</td>
                <td>США</td>
            </tr>
        </table>
    </div>

    <p class="z">Используй JSX и функциональные компоненты. Создай компонент: Rich. Используй переменную rich в качестве свойств для компонента Rich. При клике на кнопку, отобрази компонент Rich в контейнере #rich.</p>

    <div class="rich" id="rich"></div>

    <p>
        <button class="add-rich">Добавить 14 богатейших людей мира — 2021</button>
    </p>

    <script>
        var rich = {
            headings: ['№', 'ФИО', 'Состояние (в млрд $)', 'Источник состояния', 'Возраст', 'Страна'],
            data: [
                {
                    position: 1,
                    fio: 'Джефф Безос',
                    money: 177,
                    sourceOfFunds: 'Amazon.com',
                    age: 57,
                    country: 'США'
                },
                {
                    position: 2,
                    fio: 'Илон Маск',
                    money: 151,
                    sourceOfFunds: 'Tesla',
                    age: 49,
                    country: 'США'
                },
                {
                    position: 3,
                    fio: 'Бернар Арно и семья',
                    money: 150,
                    sourceOfFunds: 'LVMH',
                    age: 72,
                    country: 'Франция'
                },
                {
                    position: 4,
                    fio: 'Билл Гейтс',
                    money: 124,
                    sourceOfFunds: 'Microsoft, инвестиции',
                    age: 65,
                    country: 'США'
                },
                {
                    position: 5,
                    fio: 'Марк Цукерберг',
                    money: 97,
                    sourceOfFunds: 'Facebook',
                    age: 36,
                    country: 'США'
                },
                {
                    position: 6,
                    fio: 'Уоррен Баффет',
                    money: 96,
                    sourceOfFunds: 'Berkshire Hathaway',
                    age: 90,
                    country: 'США'
                },
                {
                    position: 7,
                    fio: 'Ларри Эллисон',
                    money: 93,
                    sourceOfFunds: 'Oracle',
                    age: 76,
                    country: 'США'
                },
                {
                    position: 8,
                    fio: 'Ларри Пейдж',
                    money: 91.5,
                    sourceOfFunds: 'Google',
                    age: 48,
                    country: 'США'
                },
                {
                    position: 9,
                    fio: 'Сергей Брин',
                    money: 89,
                    sourceOfFunds: 'Google',
                    age: 47,
                    country: 'США'
                },
                {
                    position: 10,
                    fio: 'Мукеш Амбани',
                    money: 84.5,
                    sourceOfFunds: 'Reliance Industries',
                    age: 63,
                    country: 'Индия'
                },
                {
                    position: 11,
                    fio: 'Амансио Ортега',
                    money: 77,
                    sourceOfFunds: 'Inditex',
                    age: 85,
                    country: 'Испания'
                },
                {
                    position: 12,
                    fio: 'Франсуаза Беттанкур-Майерс и семья',
                    money: 73.6,
                    sourceOfFunds: 'L\'Oreal',
                    age: 67,
                    country: 'Франция'
                },
                {
                    position: 13,
                    fio: 'Чжун Шаньшань',
                    money: 68.9,
                    sourceOfFunds: 'Nongfu Spring, Wantai',
                    age: 66,
                    country: 'Китай'
                },
                {
                    position: 14,
                    fio: 'Стив Балмер',
                    money: 68.7,
                    sourceOfFunds: 'Microsoft',
                    age: 65,
                    country: 'США'
                },
            ]
        };
    </script>

    <script type="text/babel">
        // Write your code here
        $('.add-rich').on('click', function() {
            var Rich = function(rich) {
                return (
                    <table>
                            <tr>
                                {
                                    rich.headings.map((item, idx) => <th key={idx}>{item}</th>)
                                }
                            </tr>
                        {
                            rich.data.map((item, idx) => <tr key={idx}>
                                <td>{item.position}</td>
                                <td>{item.fio}</td>
                                <td>{item.money}</td>
                                <td>{item.sourceOfFunds}</td>
                                <td>{item.age}</td>
                                <td>{item.country}</td>
                            </tr>)
                        }
                    </table>
                );
            };
            ReactDOM.render(<Rich {...rich} />, document.querySelector('#rich'));
        });
    </script>

    <style>
        .rich table {
            border-collapse: collapse;
        }

        .rich th,
        .rich td {
            border: 1px solid #000;
            padding: 5px 10px;
        }

        .rich tr:first-child {
            background: #b5b5b5;
        }

        .rich tr:nth-child(2n+3) {
            background: #ededed;
        }
    </style>
</body>
</html>